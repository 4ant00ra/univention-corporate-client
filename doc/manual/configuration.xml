<chapter id="config:chapter">
  <title>Configuration of UCC systems</title>
  <section id="config:ucr">
	<title>Setting of Univention Configuration Registry settings on UCC clients</title>
	<para>
	  The configuration of UCC system settings is mostly performed using &ucsUCR;. Typically, these
	  settings are not saved locally on the UCC client systems, but rather via UCR policies via the
	  LDAP.
	</para>

	<para>
	  The UCC setup wizard (see <xref linkend="umc:initialsetup"/>) creates three &ucsUCR; policies
	  automatically, which are linked to the containers for thin clients and desktops: These
	  policies can be edited directly:

	  <itemizedlist>
	  	<listitem><simpara>
		  <uri>ucc-common-settings</uri> is linked to the
		  <uri>cn=computers</uri> container, and thus applies for thin clients and
		  desktops.
	  	</simpara></listitem>

	  	<listitem><simpara>
		  <uri>ucc-thinclient-settings</uri> is linked to the
		  <uri>cn=computers,cn=ucc-thinclients</uri> container, and thus only applies for
		  thin clients.
	  	</simpara></listitem>

	  	<listitem><simpara>
		  <uri>ucc-desktop-settings</uri> is linked to the
		  <uri>cn=computers,cn=ucc-desktops</uri> container, and thus only applies for
		  desktops.
	  	</simpara></listitem>
	  </itemizedlist>
	</para>

	<para>
	  &ucsUCR; policies can be managed in the &ucsUMC; in the <guimenu>Policies</guimenu> menu. At
	  least one UCR variable must be configured with the <guimenu>Variable</guimenu> and
	  <guimenu>Value</guimenu> fields. Additional variables can be added by clicking on the plus
	  sign. The UCR policies are evaluated when the system is started and then once an hour.
	</para>

	<figure id="ucr-policy"><title>Configuring UCR values through a policy</title>
	<graphic scalefit="1" width="60%" fileref="illustrations/ucc-ucr-policy.png"/>
	</figure>

	<para>
	  In addition to policies, &ucsUCR; variables can also be set via the command line
	  frontend. However, we recommend performing the UCR settings via policies as the locally set
	  variables are lost when image updates are installed or thin clients are switched off (see
	  <xref linkend="rollout:overlayfs"/>).
	</para>
  </section>

  <section id="config:cron">
	<title>Definition of Cron jobs / executing commands at system startup</title>
	<para>
	  Regularly recurring actions can be defined and run on UCC clients via Cron jobs. The
	  configuration is performed as in Univention Corporate Server via &ucsUCR; or local
	  configuration files under <filename>/etc/cron.d</filename>. Further information can be found
	  in the UCS manual <biblioref linkend="ucs-manual-cron"/>.
	</para>

	<para>
	  Cron jobs can also be used to execute commands during system startup using the
	  <option>@reboot</option> option. The following &ucsUCR; variables (see <xref
	  linkend="config:ucr"/>) configure the execution of <command>/usr/bin/example</command> as the user root during the system
	  boot. <envar>COMMAND1</envar> can be replaced with arbitrary identifiers:

	  <programlisting>
cron/COMMAND1/command=/usr/bin/example
cron/COMMAND1/time=@reboot
	  </programlisting>
	</para>

  </section>

  <section id="config:softwareupdates">
	<title>Software updates / Installing additional software</title>

	<para>
	  Every UCC image comes with a predefined software package selection. A computer policy in the
	  UCS management system can be used to install available software updates and install/uninstall
	  software packages. This check is performed every time the system is started.
	  The update can also be started manually by running the <command>univention-ucc-software-update
	  --force</command> command.
	</para>

	<para>
	  The settings are defined with a <guimenu>UCC software update settings</guimenu> computer
	  policy in the &ucsUMC;:
	</para>

	<figure id="software-policy"><title>Installing additional software through a software update policy</title>
	<graphic scalefit="1" width="60%" fileref="illustrations/ucc-software-policy.png"/>
	</figure>

	<para>
	  <itemizedlist>
		<listitem><simpara>
		  <guimenu>Install available software updates</guimenu> updates all the installed packages
		for which updates are available.
		</simpara></listitem>

		<listitem><simpara>
		  <guimenu>Packages to be installed</guimenu> is a list of packages which are installed if
		they have not yet been installed and which are updated if a newer version is available.
		</simpara></listitem>

		<listitem><simpara>
		  <guimenu>Packages to be removed</guimenu> is a list of packages to be removed. This
		  function should be used with care to ensure that no packages which are essential for UCC
		are removed due to dependencies.
		</simpara></listitem>
	  </itemizedlist>
	</para>

	<caution>
	  <para>
		Always test UCC software updates on a test system before updating all clients. UCC
		updates have been tested on official UCC images; if individual images have been created for
		an environment a number of things should be considered before updating.

		<itemizedlist>
		  <listitem><simpara>
			Is there enough free space to perform the update?
			</simpara></listitem>

			<listitem><simpara>
			  How long does the update take on the target platform? Large packages take a
			  considerable amount of time to download. Slow hardware can prolong the update when
			  e.g. the initramfs has to be recreated.
			</simpara></listitem>

			<listitem><simpara>
			  Does all hardware still work after a kernel update?
			</simpara></listitem>
		</itemizedlist>
	  </para>
	</caution>

	<para>
	  It is not possible to update the kernel on thin clients; a new image must be rolled out
	  instead.
	</para>

	<para>
	  Additional software packages can also be installed on the command line using
	  <command>apt-get</command>:

	  <programlisting language="sh">
apt-get update
apt-get install emacs24
	  </programlisting>
	</para>

	<para>
	  The installation/updates are logged in
	  <filename>/var/log/univention/software-updates.log</filename>.
	</para>

	<para>
	  In the default setting, only the UCC repositories are used as package sources. &ucsUCR;
	  policies can be used to add new package sources (see <xref linkend="config:ucr"/>). The
	  variables must be specified in the form <envar>ucc/apt/ID1</envar> = <literal>apt source
	  entry</literal>, e.g.:

	  <programlisting>
ucc/apt/cs1=deb http://example.com/ application/all/
ucc/apt/cs2=deb http://example.com/ application/i386/
	  </programlisting>

	  <figure id="apt-policy">
		<title>Example UCR policy for configuring an apt source</title>
		<graphic scalefit="1" width="80%" fileref="illustrations/ucc-apt.png"/>
	  </figure>

	</para>

	<para>
	  Thin clients employ an OverlayFS (see <xref linkend="rollout:overlayfs"/>). For this reason,
	  the installation of updates is performed in several stages on thin clients: The client is
	  restarted to change to the writeable mode and then following installation of the updates
	  restarted again to change to the OverlayFS mode.
	</para>

  </section>

  <section id="config:keyboardlocale">
	<title>Configuration of the keyboard layout / locale</title>
	<para>
	  In the standard setting, the keyboard layout and the language setting (locale) of the UCS
	  system acting as PXE server is also employed on the UCC clients. If UCC systems are not installed using PXE, the
	  &ucsUCR; variables specified below need to be set via a policy:
	</para>

	<para>
	  The &ucsUCRV; <envar>xorg/keyboard/options/XkbLayout</envar> can be used to set another
	  keyboard layout, e.g., <literal>de</literal> for German or <literal>fr</literal> for
	  French.
	</para>

	<para>
	  The &ucsUCRV; <envar>locale/default</envar> can be used to set a different locale, e.g.,
	  <literal>de_DE.UTF-8:UTF-8</literal> for German or <literal>fr_FR.UTF-8:UTF-8</literal>
	  for French. Please note that it may be necessary to install additional language packages for
	  some locales. The standard thin client image includes German and English; the standard desktop
	  image includes English, German, French, Dutch and Spanish.
	</para>

	<para>
	  The language and keyboard settings are evaluated every time the system is started.
	</para>
  </section>

  <section id="config:homeshare">
	<title>Configuration of the CIFS home share</title>

	<para>
	  The <package>univention-ucc-cifshome-pam-mount</package> package allows the automatic mount of
	  a CIFS share with the user's home directory during login. It must be configured using the
	  following &ucsUCR; variables. This functionality is only suitable for stationary
	  workstations, mobile systems like notebooks should rather use a local home directory.
	  Further information on configuring &ucsUCR; variables can be found in  <xref linkend="config:ucr"/>.

	  <itemizedlist>
		<listitem><simpara>
		  <envar>ucc/mount/cifshome/server</envar>: The name of the server from which the share is
		  mounted.
		</simpara></listitem>

		<listitem><simpara>
		  <envar>ucc/mount/cifshome/share</envar>: The name of the share to be mounted.
		</simpara></listitem>

		<listitem><simpara>
		  <envar>ucc/mount/cifshome/options</envar>: This configures a optional list of mount options. The full
		  list of available options can be found in the manual page <citerefentry><refentrytitle>mount.cifs</refentrytitle><manvolnum>8</manvolnum></citerefentry>.
		</simpara></listitem>
	  </itemizedlist>
	</para>
  </section>


  <section id="config:time">
	<title>Configuration of the time zone / time server</title>
	<para>
	  In the standard setting, the time zone of the UCS system acting as PXE server is also employed on the UCC
	  clients. If UCC systems are not installed using PXE, the time zone needs to be set via a
	  policy:
	</para>

	<para>
	  The &ucsUCRV; <envar>ucc/timezone</envar> can be used to set a different time zone. The
	  available time zones can be found in the <filename class="directory">/usr/share/zoneinfo/</filename> directory,
	  for example <emphasis>Europe/Berlin</emphasis>. Further information on configuring &ucsUCR; variables can be
	  found in  <xref linkend="config:ucr"/>.
	</para>

	<para>
	  Authentication in UCC is performed through Kerberos. For this reason, synchronised time
	  sources are essential. When a UCC client joins a domain, the &ucsMaster; of the domain is set
	  as the time server. The &ucsUCRV; <envar>ucc/timeserver</envar> can be used to configure a
	  different server. Further information on configuring &ucsUCR; variables can be
	  found in  <xref linkend="config:ucr"/>.
	</para>

	<para>
	  The system time is synchronised via NTP every time the system is
	  started.
	</para>
  </section>

  <section id="config:cups">
	<title>Print server configuration</title>
	<para>
	  UCC can use one or several print servers from the UCS domain. The &ucsUCRV;
	  <envar>ucc/cups/server</envar> configures the server(s) to use;  multiple servers need to be
	  separated by a blank character. Further information on configuring &ucsUCR; variables can be
	  found in  <xref linkend="config:ucr"/>.
	</para>
  </section>

  <section id="config:logging">
	<title>Remote logging</title>
	<para>
	  In addition to local logging, the system logging (syslog) of UCC clients can also be performed
	  remotely against a central log host based on <application>rsyslog</application>. As standard, the logging is performed
	  against the UCS system acting as PXE server.
	</para>

	<para>
	  The log files are stored in the <filename class="directory">/var/log/univention/ucc-clients/</filename>
	  directory. A separate log file is maintained for each client. The log files are also rotated
	  with Logrotate, e.g., <filename>syslog-client01.log</filename>,
	  <filename>syslog-client01.log.1</filename>, etc.
	</para>

	<para>
	  The &ucsUCRV; <envar>ucc/pxe/append</envar> can be adapted to deactivate the remote logging
	  (<literal>syslog=n</literal>) or reroute it to another log host (<literal>syslogserver=<replaceable>HOSTNAME</replaceable></literal>). These configuration
	  options are only set during the installation or update of an UCC system.
	</para>
  </section>


  <section id="config:ssh">
	<title>SSH access to UCC clients</title>
	<para>
	  As standard, an SSH login is possible on UCC clients. The login is performed with the local
	  root account or a domain account.
	</para>
  </section>


  <section id="config:bootsplash">
	<title>Boot-splash startup animation</title>
	<para>
	  A startup animation (boot-splash) is displayed when a UCC client is started. It can be hidden
	  by pressing the Escape key to diagnose the startup in full details.
	</para>

	<para>
	  The &ucsUCRV; <envar>ucc/pxe/bootsplash</envar> on the UCS system acting as PXE server can be set to
	  <literal>no</literal> to deactivate it completely.
	</para>
  </section>
</chapter>
