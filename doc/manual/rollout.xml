<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
	<!ENTITY % extensions SYSTEM "../stylesheets/macros.ent" >
	<!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >
	%extensions;
	%entities;
]>
<chapter id="rollout:chapter">
  <title>Rollout of UCC systems</title>

<para>
  UCC systems are rolled out via an image-based approach: All the
  user data - and as such also the user settings - are stored on a
  separate partition. If a new version of the image is installed, the
  complete operating system installation is overwritten.
</para>

<para>
  When the image is installed, the image installation tool checks whether there is already a
  computer account available for the client and uses it. If the computer name is not stored in
  advance, the name can be specified interactively during the installation. The recommended rollout procedure is
  creating the UCC systems in the &ucsUMC; in advance. See <xref linkend="umc:chapter"/> for more
  information on managing UCC systems in the &ucsUMC;.
</para>

<section id="rollout:imagerollout">
<title>Rollout of images</title>
<para>
  The image with which a UCC client is operated is configured in the
  &ucsUMC; in the <guimenu>Images</guimenu> tab on UCC computer
  objects. All UCC images registered in the UCS management
  system are available for selection. The registration is effected
  with join scripts during the installation of the image, see <xref
  linkend="installation:imagemanagement:download"/>.
</para>

<figure id="assign-image"><title>Assigning the desktop image to a UCC client</title>
 <graphic scalefit="1" width="60%" fileref="illustrations40/ucc-assign-image.png"/>
 </figure>

<para>
  The &ucsUMC; can also be used to edit several objects at once, which
  permits the assignment of images to several computers at once. This
  is documented in the UCS manual <biblioref linkend="ucs-manual-multiedit"/>.
</para>


 <para>
   On UCC systems, user-specific data such as the home directory of the users must be stored separately from
   the system data on another partition. This is the case in the default partition
   configuration. The partitioning scheme is specified in the image configuration, see <xref
   linkend="imagegen:params"/>. It is also possible to perform completely new partitioning schemes -
   e.g. an encrypted hard drive - with an adapted partitioning script, see <xref
   linkend="rollout:crypto"/>).
 </para>

<para>
  UCC clients can be operated in five different modes,
  which can be assigned via the <guimenu>Boot variant</guimenu> field.
  The client must be configured for PXE boot in the BIOS.
  <itemizedlist>
	<listitem>
	  <simpara><guimenu>Live boot</guimenu> Here the image is
	  started via PXE and mounted via NFS. Technically, all UCC systems are always
	  treated as having read/write storage media: If an image is mounted from a
	  source which itself only allows read-only access (from a live DVD or as
	  in this case from an NFS share), an OverlayFS file system is employed:
	  All the write changes are cached in the system memory and are lost when the computer is
	  switched off. Thin clients are also always run with an OverlayFS
	  for a local installation, further information can be found under
	  <xref linkend="rollout:overlayfs"/>.
	</simpara></listitem>

	<listitem>
	  <para>
		<guimenu>Installation with repartitioning and image rollout</guimenu>: This mode is used for
		the initial installation of a UCC client. It is also required whenever a UCC client should
		be reinstalled completely or switched to a different partition scheme. The partitions of the
		system are setup as configured in the image configuration. A prompt must be
		confirmed before the partitioning begins (it can be disabled using the boot option
		<option>force_partition</option>, see below). After the installation of the image, the
		system is joined into the UCS domain.
	  </para>

	  <caution>
		<para>
		  Existing user data on a /home partition of a system are also deleted!
		</para>
	  </caution>
	</listitem>

	<listitem>
	  <para>
		<guimenu>Image boot with update check</guimenu> is used to update an existing UCC
		installation to a new version. It is detected whether the installed image differs
		from the image to be installed. If that is the case, the UCC image on the system is replaced.
		In contrast to the partition option above, no new partitioning occurs. All user data on the
		<filename>/home</filename> partition is retained.
	  </para>
	</listitem>

	<listitem>
	  <para>
		<guimenu>Image boot without update check</guimenu>: In this boot mode, the locally installed
		image is started and no check for a newly available image performed. Following a successful
		installation performed with <guimenu>Image boot with update check</guimenu> or
		<guimenu>Installation with repartitioning and image rollout</guimenu>, the system returns to
		this boot mode automatically.
	  </para>
	</listitem>

	<listitem>
	  <para>
		<guimenu>Local boot</guimenu>: In the boot versions <guimenu>Image boot without update
		check</guimenu> and <guimenu>Image boot with update check</guimenu>, the UCC system is
		started with PXE and the locally installed system started following the update check. If
		this option is enabled, a special PXE configuration is created for the computer, with which
		the PXE firmware of the system does not perform a PXE boot, but instead starts the locally
		installed system directly. This is comparable to a certain extent with if the boot order in
		the BIOS of the system were changed over to a local disk, but does not require any
		adaptation of the BIOS.
	  </para>
	</listitem>

  </itemizedlist>
</para>

<para>
  The <guimenu>Additional boot parameter</guimenu> input field can be
  used to add arbitrary parameters to the initial RAM disk, which performs
  the installation/rollout. These preconfigured options exist:
</para>
<variablelist>
	<varlistentry>
		<term><option>debugshell=y</option></term>
		<listitem><simpara>
				If an error occurs during installation of the image, a
				shell opens in which the problem can be analysed further.
		</simpara></listitem>
	</varlistentry>
	<varlistentry>
		<term><option>verbose=y</option></term>
		<listitem><simpara>
				The shell scripts of the initial RAM disk are started with the
	  parameter <option>-x</option>, with which the current control flow can be better monitored (useful for
	  debugging).
		</simpara></listitem>
	</varlistentry>
	<varlistentry>
		<term><option>force_partition</option></term>
		<listitem><simpara>
				If an image is rolled out and the <guimenu>Installation with repartitioning and image
	  rollout</guimenu> option used, a warning message appears reminding you that all the data on
	  the hard drive will be lost if the repartitioning is performed. This warning message needs to
	  be confirmed. If the <option>force_partition</option> boot option is assigned, the
	  security prompt is not shown any more.
		</simpara></listitem>
	</varlistentry>
</variablelist>

<para>
  The <guimenu>Dedicated image server</guimenu> select box allows to select a dedicated server
  for the installation/update of the particular UCC client. During the rollout the dedicated image
  server is the first choice for downloading the image to the client. In order for clients to download
  the kernel and initramfs during PXE boot, a PXE boot policy also has to be configured, see <xref
  linkend="rollout:bootpolicy"/>.
</para>

</section>


<section id="rollout:crypto">
  <title>Custom partition scripts / Configuring an encrypted disk</title>
  <para>
	In the standard setting the partitioning scheme is configured in the image configuration. A
	different partitioning can be configured using partition scripts. They are
	stored on the UCS server(s) in the directory
	<filename class="directory">/var/lib/univention-client-boot/partition-scripts/</filename>. The file name below that
	directory needs to be configured in the <guimenu>Additional boot options</guimenu>, see <xref
	linkend="rollout:imagerollout"/>) using the command
	<command>partition_script=FILENAME</command>. The filename is specified relative to the
	directory, e.g. <filename>partition_script=desktop_encrypted.example</filename>.
  </para>

  <para>
	An example configuration which configures an encrypted LUKS hard disk for the UCC desktop image is
	shipped as <filename>desktop_encrypted.example</filename>.
  </para>
</section>

<section id="rollout:domainjoins">
<title>Domain join of UCC systems</title>
<para>
  Only UCC clients, which are joined into a UCS domain can be
  configured centrally. Unjoined clients can be used for special
  setups like live systems or demo points.
</para>

<para>
  The domain join is typically performed in the scope of the rollout
  via PXE (see <xref linkend="rollout:imagerollout"/>). The domain
  join can also be subsequently performed by
  running <command>univention-join</command>. The subsequent domain join
  cannot be performed via SSH, but should instead be run via a
  local login or, if virtualization is employed, via VNC.
</para>

</section>


<section id="rollout:automatic">
<title>Configuration of a fully automated rollout</title>
<para>
  In the default setting, a user name and password must be specified when joining the domain. The
  rollout of UCC systems can also be completely automated so that user interaction is no longer
  necessary. Once all the clients to be rolled out have been created in the UCS management system
  (see <xref linkend="umc:manageucc"/>), the following steps are necessary:

  <itemizedlist>
	<listitem><simpara>
	  An image must be generated in which the interactive confirmation of he partitioning is
	  disabled. This can be achieved by setting the option <option>continuation_prompt</option>
	  to <literal>false</literal> (see <xref linkend="imagegen:params"/>). Alternatively the boot
	  option <option>force_partition</option> can be used, see <xref linkend="rollout:imagerollout"/>).
	</simpara></listitem>

	<listitem><simpara>
	  Then the credentials of a user need to be stored in the image, which is authorised to join
	  clients in the domain (the user must be a member of the <systemitem class="groupname">Domain Admins</systemitem> and
	  <systemitem class="groupname">DC Backup Hosts</systemitem> groups for this). For security reasons, this user should
	  only be created during the rollout and then removed or disabled after the rollout.
	</simpara></listitem>

	<listitem><simpara>
	  These credentials are now saved in the image with the tool
	  <command>ucc-image-set-join-information</command>. The parameter <option>-i</option> is
	  used to specify an image and the join account and its password are interactively
	  prompted. Alternatively, the account can be specified with <option>-u</option>, the domain
	  with <option>-d</option> and the password with <option>-p</option>.
	</simpara></listitem>

	<listitem><simpara>
	  The clients are then rolled out fully automatically without user interaction.
	</simpara></listitem>
  </itemizedlist>
</para>
</section>


<section id="rollout:iso">
<title>Roll-outs using an ISO image</title>
<para>
  While the standard rollout mechanism for UCC systems is PXE-based,
  it is also possible to perform installations using ISO images, which
  can be written to USB sticks, DVDs or Blu-ray disks.
</para>
<para>
  The images are available at
  <ulink url="http://ucc-images.software-univention.de/download/ucc-images/"/>.
</para>
<para>
  The client to be installed must be created in the UMC computer
  management first (see <xref linkend="umc:manageucc"/>), otherwise it doesn't have an IP address
  assigned and the domain join would fail.
</para>
</section>

<!-- <section id="rollout:iso:xen"> -->
<!-- <title>UCC installation as Xen Guest</title> -->
<!-- <para> -->
<!--   To install an UCC ISO image in a Xen DomU, the DomU must be configured to be -->
<!--   fully virtualized (HVM). On an UCS System with a virtual machine manager the operating system option -->
<!--   'Other' has to be used <biblioref linkend="ucs-manual-uvmm"/>. -->
<!--   Please note that the official UCC desktop image uses a kernel that supports pvops, so I/O performance -->
<!--   is that of a paravirtualized guest when pvops is supported by Dom0. On an official thinclient image -->
<!--   another kernel with pvops support can be installed, e.g. linux-image-generic-pae. More information -->
<!--   about pvops can be found at <ulink url="http://wiki.xen.org/wiki/Paravirtualization_%28PV%29"/>. -->
<!-- </para> -->
<!-- </section> -->

<section id="rollout:persistent">
<title>Persistently stored system settings</title>
<para>
  System data which must be preserved during a UCC update (e.g., the join
  status) are stored separately from the system data and automatically restored
  after updates. These files and selected &ucsUCR; variables are registered in
  the UCR variables <envar>ucc/persistent/files</envar> and
  <envar>ucc/persistent/ucr</envar>. Important standard UCC settings
  are preconfigured automatically and can be expanded for local
  adaptations. Ten megabytes of disk space are reserved for storing the &ucsUCR; settings and the
  persistent configuration files.
</para>
</section>

<section id="rollout:bootpolicy">
<title>Configuration of the PXE server in a multi-server environment</title>
<para>
  The rollout of UCC systems usually occurs via PXE (see <xref linkend="rollout:imagerollout"/>). If
  UCC is operated in a single server environment the server distributing the IP addresses to the
  clients is identical to the PXE server providing the UCC images for installation.
</para>
<para>
  If UCC is used in a distributed environment, there may be DHCP servers not serving as PXE servers. In
  that case the UCS server distributing the UCC images needs to be configured through a
  <guimenu>DHCP Boot</guimenu> policy. Please see the UCS manual for additional information
  <biblioref linkend="ucs-manual-pxeboot"/>.
</para>
</section>



<section id="rollout:overlayfs">
<title>OverlayFS on thin clients</title>
<para>
  The CompactFlash storage media typically integrated in thin clients
  are only designed for a limited number of write operations.
</para>

<para>
  In UCC thin clients are thus started with an OverlayFS file system
  so that all write accesses on the storage media of a booted system
  are only performed in the system memory and not written to the hard
  drive. All the write changes are thus lost once the thin client is
  switched off. This does not pose any problems for access to terminal
  services, as all the user activities are performed on the respective
  terminal servers. The standard write access is selectively enabled
  for individual operations such as the installation of new UCC images
  or subsequent installation of software.
</para>

<para>
  If a thin client uses storage media which allows
  permanent write access, the OverlayFS can also be disabled by
  adding <literal>mount=rw</literal> to the <guimenu>Images -> Additional
  boot parameter</guimenu> of the computer object in the computer management
  module of the &ucsUMC;.
</para>

<para>
  In addition the &ucsUCR; variable <envar>ucc/thinclientoverlayfs</envar> must
  be set to <literal>false</literal> on the affected thin clients using a &ucsUCR; policy
  (see <xref linkend="config:ucr"/>). This variable allows tools such as
  <command>univention-ucc-software-update</command> to detect whether they are running on a thin
  client using OverlayFS.
</para>

</section>

<section id="rollout:uefi">
  <title>Rollout of UEFI systems</title>
  <para>
	Univention Corporate Client uses a BIOS-based boot by default. Alternatively, for
	systems which no longer support a BIOS boot, it is possible to generate UCC images
	with which the rollout and operation can be performed via the <emphasis>Unified Extensible
	Firmware Interface</emphasis> standard.
  </para>

  <para>
	Not all UEFI-compatible systems also support UEFI booting via PXE. This should be checked in
	advance and consideration given to updating the UEFI firmware.
  </para>

  <para>
	An image configuration is delivered with the image build tool for UEFI systems:
	<filename>/usr/share/doc/ucc-image-toolkit/example/ucc-desktop-efi.cfg.gz</filename>. Information
	on building an image can be found in <xref linkend="imagegen:toolkit"/>.
  </para>

  <para>
	As standard, the <filename>pxelinux.0</filename> boot loader is used for the rollout of BIOS-based
	systems and assigned in the &ucsUMC; via a <guimenu>DHCP Boot</guimenu> policy. A
	UEFI-compatible boot loader must be assigned via this type of policy for the UEFI
	rollout. <filename>syslinux.efi32</filename> must be assigned as the <guimenu>Boot
	filename</guimenu> for i386 systems and <filename>syslinux.efi64</filename> for amd64 systems.
  </para>

  <para>
	If a UEFI-compatible image has been generated and the DHCP boot policy defined, the rollout of
	a UEFI system is not different from the standard rollout via the BIOS.
  </para>
</section>

<section id="rollout:gptfix">
  <title>Rollout problems with subsequently enlarged hard disks</title>
  <para>
	If a hard disk has been subsequently enlarged - typically if a virtualized disk is used, which
	is then subsequently enlarged - the rollout may encounter GPT partition data from the previous
	installation procedure, which no longer correspond to the current size of the disk. Generally
	speaking, when enlarging the memory of a virtualized system, it is more advisable to add an
	additional disk.
  </para>

  <para>
	As a workaround, the system can be started with the <option>debugshell=y</option> boot
	option (see <xref linkend="rollout:imagerollout"/> and the GPT table rewritten with the
	following command:

	<programlisting language="sh">
parted -s PARTITIONDEVICE mklabel GPT
	</programlisting>
  </para>

</section>

<section id="rollout:thinclientsoffline">
  <title>Operating thin clients without persistent access to LDAP servers</title>
  <para>
	In the default configuration UCC thin clients require a connection to an LDAP server to start
	and receive their configuration from LDAP. For special configurations UCC can also be configured
	to cope with inaccessible LDAP servers. The exact setup may vary a lot depending on the setup
	so the following items are not a comprehensive list of necessary changes, but rather building
	blocks to adapt to such a setup:

	<itemizedlist>
	  <listitem><simpara>
		The &ucsUCR; variable <envar>ucc/ldap/network/timeout</envar> can be used to configure a
		timeout for connecting to the LDAP server, by default ten seconds.
	  </simpara></listitem>

	  <listitem><simpara>
		By default the policies which apply to a thin client are retrieved from LDAP during system
		startup. If the package <package>univention-ucc-eval-policies-on-join</package> is installed
		into a UCC image, the system policies are retrieved during the join of the thin client
		and stored in the image (<filename>/var/cache/ucc/client-policy-*</filename>)
		These files can be treated as fallback values: If the thin client is able to connect to an
		LDAP server during startup, the current values are fetched from LDAP and overwrite the
		existing values in <filename class="directory">/var/cache/ucc/</filename> temporarily (since the thin client image uses OverlayFS,
		see <xref linkend="rollout:overlayfs"/>). If the thin client cannot connect to an LDAP server
		the local values are used.
	  </simpara></listitem>

	  <listitem><simpara>
		Instead of only writing the fallback values during the system rollout, it is also possible to
		cache them on every system start: In that case the package
		<package>univention-ucc-eval-policies-on-boot</package> needs to be installed instead of
		<package>univention-ucc-eval-policies-on-join</package>. It should be noted that this leads to a
		write access on the thin client storage on every boot! This may lead to problems on thin clients
		with storage media which is only designed for a limited amount of write accesses (such as
		CompactFlash).
	  </simpara></listitem>
	</itemizedlist>
  </para>
</section>




</chapter>
