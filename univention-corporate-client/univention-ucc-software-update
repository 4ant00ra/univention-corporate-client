#!/bin/bash 
# Univention Corporate Client
#
# Copyright 2013 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

. /usr/share/univention-lib/ucc.sh
. /usr/share/univention-lib/ucr.sh

logfile="/var/log/univention/software-updates.log"
exec >>"$logfile" 2>&1

update_status_file="$(mktemp univention-ucc-software-update.XXXXXXXXXX)"
touch $update_status_file

# This script supports software updates for both systems with and without overlayfs
# If a system with overlaysfs is booted, it is marked for read/write operation and rebooted
export DEBIAN_FRONTEND="noninteractive"
export LC_ALL=C
export LANG=C

message() {
	echo "$(date) $1"
	plymouth message --text="$1"
}

apt_get_update() {
	nextupdate=$(expr $(cat "$update_status_file") + 600)
	if [ $(date +%s) -ge $nextupdate ]; then
		message "Checking for available software updates"
		apt-get update
		date +%s > "$update_status_file"
	fi
}

check_for_rw_mount_and_reboot() {
	# When running on overlayfs, switch to R/W mode
	if mount | grep -q "on /root-ro"; then
		message "Rebooting to install software updates"
		/usr/sbin/univention-ucc-boot-option --write --option mount --value rw
		/usr/sbin/univention-ucc-boot-option --write --option swinstreset --value true
		rm -f "$update_status_file"
		sync
		reboot
		exit 0
	fi
}

echo "$(date) Starting Univention UCC software update"

update=`get_host_policy_var univentionCorporateClientSoftwareUpdateActivate` 
if [ "1" = "$update" ]; then

	apt_get_update

	# Test, whether we need to update the installed packages.
	new=`apt-get dist-upgrade --dry-run | grep "packages will be [installed|upgraded]"`
	if [ -n "$new" ]; then

		check_for_rw_mount_and_reboot

		message "Installing available software updates - this may take some time. Do not turn off the computer" 
		apt-get -o DPkg::Options::=--force-confold -o DPkg::Options::=--force-overwrite -o DPkg::Options::=--force-overwrite-dir -y --force-yes -u dist-upgrade
		apt-get clean
	fi
fi

# Test whether, we need to remove packages. If so, switch to r/w mode if using overlayfs

remove=`get_host_policy_var univentionCorporateClientSoftwareUpdateRemoveList`
rmneeded=""
for I in $remove
do
	PKGRM=`echo $I | tr -d "="`

	if dpkg-query -W  -f='${Status}' $PKGRM | grep -q "installed"; then
		rmneeded="$rmneeded $I"
	fi
done

# Test, whether we need to remove packages
if [ -n "$rmneeded" ]; then

	check_for_rw_mount_and_reboot

	for I in $rmneeded
	do
		PKGRM=`echo $I | tr -d "="`
		message "Removing package $PKGRM"
		apt-get --yes remove $PKGRM
	done
fi

install=`get_host_policy_var univentionCorporateClientSoftwareUpdateInstallList` 

# Test whether, we need to install packages.
instneeded=""
for I in $install
do
	apt_get_update
	PKGINST=`echo $I | tr -d "="`

	new=`apt-get install --dry-run $PKGINST | grep "packages will be [installed|upgraded]"`
	if [ -n "$new" ]; then
		instneeded="$instneeded $I"
	fi
done

if [ -n "$instneeded" ]; then

	check_for_rw_mount_and_reboot

	for I in $instneeded
	do
		PKGINST=`echo $I | tr -d "="`
		message "Installing package $PKGINST"
		apt-get -o DPkg::Options::=--force-confold -o DPkg::Options::=--force-overwrite -o DPkg::Options::=--force-overwrite-dir -y --force-yes install $PKGINST
	done
fi

# Reset flag that triggers a r/w mount for systems booted with overlayfs
if ! mount | grep -q "on /root-ro"; then
	if is_ucr_true 'ucc/thinclientoverlayfs'; then
		resetclient=`/usr/sbin/univention-ucc-boot-option --read --option swinstreset`
		if [[  -n $resetclient  && "true" = $resetclient ]]; then
			/usr/sbin/univention-ucc-boot-option --write --option swinstreset --delete
			/usr/sbin/univention-ucc-boot-option --write --option mount --delete
			rm -f "$update_status_file"
			sync
			reboot
		fi
	fi
fi

rm -f "$update_status_file"
echo "$(date) Finished Univention UCC software update"
exit 0
