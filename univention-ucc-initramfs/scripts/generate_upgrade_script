#!/usr/bin/python2.7
#
# Univention Corporate Client
#  helper script: creates an update script for the initramfs
#
# Copyright 2012-2013 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

import socket
import sys
import univention.uldap
import univention.config_registry

if __name__ == '__main__':
	servers = []

	ucr = univention.config_registry.ConfigRegistry()
	ucr.load()

	print '#!/bin/sh'

	res = None
	servers = []
	try:
		lo = univention.uldap.getMachineConnection(ldap_master=False)
		res = lo.search(base=ucr.get('ldap/hostdn'), attr=['univentionCorporateClientBootImage'], unique=True, required=True)
		bootImage = res[0][1].get('univentionCorporateClientBootImage', [])[0]
		filter = '(&(objectClass=univentionCorporateClientImage)(univentionCorporateClientImageName=%s))' % bootImage
		res = lo.search(filter=filter, attr=['univentionCorporateClientImageServer'], unique=True)
	except:
		print "# Could not establish machine connection"

	if res:
		servers = res[0][1].get('univentionCorporateClientImageServer', [])

	if servers:
		print '''

. /scripts/ucc

nfs_mount ()
{
	server="$1"
	image="$2"
	mkdir -p /ucc_tmp/boot_medium
	if mount -t nfs -o nolock,ro ${server}:/var/lib/univention-client-boot/ /ucc_tmp/boot_medium; then
		if _check_and_copy_image "${image}"; then
			umount /ucc_tmp/boot_medium
			return 0
		fi
		umount /ucc_tmp/boot_medium
	fi
	return 1
}


'''
	for server in servers:
		print '''
if nfs_mount "%(server)s" "%(image)s"; then
	return 0
fi
''' % {'server': socket.gethostbyname(server), 'image': bootImage}

	print 'return 1'

	sys.exit(0)


